// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// ↓NextAuthに自動生成されたスキーマ

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId]) // PlanetScaleに最適化するため手動で追加
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId]) // PlanetScaleに最適化するため手動で追加
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// ↑NextAuthに自動生成されたスキーマ

model Trainee {
  id         String @id
  name       String
  image      String
  authUserId String @unique

  muscles   Muscle[]
  exercises Exercise[]
  trainings Training[]
}

model Muscle {
  id        String @id
  name      String
  traineeId String

  exercises Exercise[]

  trainee Trainee @relation(fields: [traineeId], references: [id])

  @@unique([name, traineeId])
  @@index([traineeId])
}

model Exercise {
  id        String @id
  name      String
  traineeId String

  targets Muscle[]
  trainings TrainingSet[]

  trainee Trainee @relation(fields: [traineeId], references: [id])

  @@index([traineeId])
  @@unique([name, traineeId])
}

model Training {
  id String @id
  createdAt DateTime
  updatedAt DateTime
  traineeId String

  trainee Trainee @relation(fields: [traineeId], references: [id])

  trainingSets TrainingSet[]

  @@index([traineeId])
}

model TrainingSet {
  id String @id
  weight Int
  repetition Int
  trainingId String
  exerciseId String

  training Training @relation(fields: [trainingId], references: [id])
  exercise Exercise @relation(fields: [exerciseId], references: [id])

  @@index([trainingId])
  @@index([exerciseId])
}
